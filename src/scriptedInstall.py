import getpass
import subprocess
from src.core import * 
import sys
import pkg_resources
from src.utils import run_command_sudo_noprompt, run_command3, parse_module_config_file
from shutil import which
import requests
import zipfile
from config.config import BASE_INSTALL_PATH
import io


class ScriptedInstall:
    
    def __init__(self):
        
        self.url = ''
        self.name = ''
        self.status = ''
        self.cmd_string = ''
        self.command_list = []
        
    def parse_config(self, filename):
        '''
        parse module configuration file and extract information to store it in the object
        '''
        
        self.name = parse_module_config_file(filename,'NAME')
        self.url = parse_module_config_file(filename,'INSTALLER_URL')
        self.cmd_string = parse_module_config_file(filename,'CMD')
        self.command_list = self.cmd_string.split(';')
        self.path = BASE_INSTALL_PATH + '/' + self.name
        
        self.printSummary()   
        
    def checkStatus(self):
        '''
        check if the module is installed
        '''
        
        r = which(self.name)
        
        if r is not None:
            
            self.status = 'installed'
            print_status(f'{ self.name } is installed')
            return True
        
        else:
        
            self.status = 'Not installed'
            print_warning(f'{ self.name } is NOT installed')
            return False
        
    def printSummary(self):
        
        print(f'\n{ bcolors.CYAN }************************************************************{ bcolors.ENDC }')
        print(f'{ bcolors.BLUE }Name: { bcolors.ENDC }{ self.name }')
        print(f'{ bcolors.BLUE }Installation type: { bcolors.ENDC }SCRIPTED')
        print(f'{ bcolors.BLUE }Installer URL: { bcolors.ENDC }{ self.url }')
        print(f'{ bcolors.BLUE }Installer CMD: { bcolors.ENDC }{ self.cmd_string }')
        print(f'{ bcolors.CYAN }************************************************************{ bcolors.ENDC }\n')
        
        
    def download(self):
        '''
        download installer
        '''
        
        if self.url != '':
            
            print_status(f'Downdoading package for { self.name }')
        
            r = requests.get(self.url, stream=True)
            z = zipfile.ZipFile(io.BytesIO(r.content))
            FULL_PATH = os.path.expanduser(BASE_INSTALL_PATH)
            z.extractall(FULL_PATH)
            
        else:
            
            print_status(f'No Download required for { self.name }')
        
        
    def install(self):
        '''
        install
        '''
        
        print_status(f'Installing { self.name }')
        
        for cli in self.command_list:
            
            cli = cli.replace('__PATH__', BASE_INSTALL_PATH)
        
            if 'sudo' in cli:
                
                print(f'subprocess for CLI: { cli }')
                run_command_sudo_noprompt(cli)
                
                
            else:
                
                print(f'subprocess for CLI: { cli }')
                run_command3(cli) 